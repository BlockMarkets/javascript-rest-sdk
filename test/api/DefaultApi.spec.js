/**
 * BlockMarkets Cryptocurrency API
 * The BlockMarkets API provides real-time and historical market data on cryptocurrencies from the world's leading crypto exchanges. Sign up for a free, unlimited API key at [BlockMarkets Cryptocurrency API](https://www.blockmarkets.io/cryptocurrency-api).
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.blockmarkets);
  }
}(this, function(expect, blockmarkets) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new blockmarkets.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('benchmarkRate', function() {
      it('should call benchmarkRate successfully', function(done) {
        //uncomment below and update the code to test benchmarkRate
        //instance.benchmarkRate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('benchmarkRateHistory', function() {
      it('should call benchmarkRateHistory successfully', function(done) {
        //uncomment below and update the code to test benchmarkRateHistory
        //instance.benchmarkRateHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssetMarkets', function() {
      it('should call listAssetMarkets successfully', function(done) {
        //uncomment below and update the code to test listAssetMarkets
        //instance.listAssetMarkets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAssets', function() {
      it('should call listAssets successfully', function(done) {
        //uncomment below and update the code to test listAssets
        //instance.listAssets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBenchmarkRates', function() {
      it('should call listBenchmarkRates successfully', function(done) {
        //uncomment below and update the code to test listBenchmarkRates
        //instance.listBenchmarkRates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExchangeMarkets', function() {
      it('should call listExchangeMarkets successfully', function(done) {
        //uncomment below and update the code to test listExchangeMarkets
        //instance.listExchangeMarkets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExchanges', function() {
      it('should call listExchanges successfully', function(done) {
        //uncomment below and update the code to test listExchanges
        //instance.listExchanges(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMarkets', function() {
      it('should call listMarkets successfully', function(done) {
        //uncomment below and update the code to test listMarkets
        //instance.listMarkets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPairMarkets', function() {
      it('should call listPairMarkets successfully', function(done) {
        //uncomment below and update the code to test listPairMarkets
        //instance.listPairMarkets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPairs', function() {
      it('should call listPairs successfully', function(done) {
        //uncomment below and update the code to test listPairs
        //instance.listPairs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSpotRates', function() {
      it('should call listSpotRates successfully', function(done) {
        //uncomment below and update the code to test listSpotRates
        //instance.listSpotRates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('marketBook', function() {
      it('should call marketBook successfully', function(done) {
        //uncomment below and update the code to test marketBook
        //instance.marketBook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('marketOHLCV', function() {
      it('should call marketOHLCV successfully', function(done) {
        //uncomment below and update the code to test marketOHLCV
        //instance.marketOHLCV(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('marketTicker', function() {
      it('should call marketTicker successfully', function(done) {
        //uncomment below and update the code to test marketTicker
        //instance.marketTicker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('marketTrades', function() {
      it('should call marketTrades successfully', function(done) {
        //uncomment below and update the code to test marketTrades
        //instance.marketTrades(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spotRate', function() {
      it('should call spotRate successfully', function(done) {
        //uncomment below and update the code to test spotRate
        //instance.spotRate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spotRateHistory', function() {
      it('should call spotRateHistory successfully', function(done) {
        //uncomment below and update the code to test spotRateHistory
        //instance.spotRateHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('spotRateOHLCV', function() {
      it('should call spotRateOHLCV successfully', function(done) {
        //uncomment below and update the code to test spotRateOHLCV
        //instance.spotRateOHLCV(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
